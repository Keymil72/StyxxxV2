const Logger = require('./Logger.js');
const msgWLIds = require('./msgWLIds.js');
const path = require('path');

// usuwa wiadomoÅ›Ä‡ po 15 sekundach, a nastÄ™pnie usuwa odpowiedÅº po 2 sekundach
async function cleanReply(interaction) {
    //edytujemy odpowiedÅº po 15 sekundach
    setTimeout(async () => {
        // usuwamy odpowiedÅº po 2 sekundach
        setTimeout(async () => {
            await interaction.deleteReply();
        }, 2000);
        await interaction.editReply('Ja tu tylko sprzÄ…tam... ðŸ§¹');
    }, 15000);
}

// loguje i usuwa wiadomoÅ›Ä‡ po 15 sekundach
async function cleanMessage(message) {
    // sprawdzenie czy wiadomoÅ›Ä‡ istnieje
    if (message){
        // sprawdzenie czy wiadomoÅ›Ä‡ nie jest na liÅ›cie wykluczeÅ„ oczywiÅ›cie callbackiem hehe
        msgWLIds.zawieraWiadomosc(message, (result) => {
            // jeÅ›li nie jest na liÅ›cie wykluczeÅ„
            if (!result){
                // edycja wiadomoÅ›ci po 15 sekundach
                setTimeout(async () => {
                    // usuniÄ™cie wiadomoÅ›ci po 2 sekundach
                    setTimeout(async () => {
                        // prÃ³ba usuniÄ™cia wiadomoÅ›ci i zgÅ‚oszenie bÅ‚Ä™du w przypadku niepowodzenia
                        try {
                            let attachmentUrl = message.attachments.first() ? message.attachments.first().url : null;
                            let ApolloEmbed = message?.embeds?.length ? message.embeds[0]?.author?.name : null;
                            //NOTE - Logger done
                            Logger.log(message.client, `Usuwam wiadomoÅ›Ä‡ "${message.content}" z zaÅ‚Ä…cznikiem "${attachmentUrl}" z Apollo embed "${ApolloEmbed}" na kanale ${message.channel}`, `${path.dirname}/${path.basename}`, 'Content');
                            await message.delete();
                        }catch (error){
                            //NOTE - Logger done
                            Logger.log(message.client, `BÅ‚Ä…d podczas usuwania wiadomoÅ›ci na kanale ${message.channel} - ${error}`, `${path.dirname}/${path.basename}`, 'Error');
                        }
                    }, 2000);
                    // prÃ³ba edycji wiadomoÅ›ci i zgÅ‚oszenie bÅ‚Ä™du w przypadku niepowodzenia
                    try {
                        await message.edit('Ja tu tylko sprzÄ…tam... ðŸ§¹');
                    }catch (error){
                        //NOTE - Logger done
                        Logger.log(message.client, `BÅ‚Ä…d podczas edycji wiadomoÅ›ci na kanale ${message.channel} - ${error}`, `${path.dirname}/${path.basename}`, 'Error');
                    }
                }, 15000);
            }
        });
    }
}

module.exports = { cleanReply, cleanMessage };